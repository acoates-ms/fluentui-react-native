parameters:
  relative_directory: ''
  xcode_sdk: ''
  xcode_configuration: ''
  xcode_workspacePath: ''
  xcode_scheme: ''
  xcode_actions: ''
  xcode_useXcpretty: false
  xcode_destination: ''
  xcode_extraArgs: ''

steps:
  # Install node_modules necessary for the project
  - bash: |
      echo "Running: cd apps/apple/FluentUITester/$platform_directory && yarn install" &&
      cd apps/apple/FluentUITester/$platform_directory &&
      yarn
    env:
      platform_directory: ${{ parameters.relative_directory }}
    displayName: "yarn"

  # Install any pods necessary for the project
  - bash: |
      echo "Running: cd apps/apple/FluentUITester/$platform_directory && pod install" &&
      cd apps/apple/FluentUITester/$platform_directory &&
      pod install
    env:
      platform_directory: ${{ parameters.relative_directory }}
    displayName: "pod install"

  # Different packagers for iOS and macOS
  - task: CmdLine@2
    condition: and(succeeded(), eq('${{ parameters.relative_directory }}', 'ios'))
    displayName: 'Start Packager- iOS'
    inputs:
      script: .ado/ado-packager-setup_ios.sh

  - task: CmdLine@2
    condition: and(succeeded(), eq('${{ parameters.relative_directory }}', 'macos'))
    displayName: 'Start Packager- macOS'
    inputs:
      script: .ado/ado-packager-setup-macos.sh

  - task: Bash@3
    condition: and(succeeded(), eq('${{ parameters.relative_directory }}', 'ios'))
      script: cd apps/apple/FluentUITester/$platform_directory && npx react-native run-ios
    env:
      platform_directory: ${{ parameters.relative_directory }}
    displayName: "build ios xcworkspace"
    
  - task: Bash@3
    condition: and(succeeded(), eq('${{ parameters.relative_directory }}', 'macos'))
      script: cd apps/apple/FluentUITester/$platform_directory && npx react-native run-macos
    env:
      platform_directory: ${{ parameters.relative_directory }}
    displayName: "build ios xcworkspace"
