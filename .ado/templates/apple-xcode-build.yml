parameters:
  relative_directory: ''
  xcode_sdk: ''
  xcode_configuration: ''
  xcode_workspacePath: ''
  xcode_scheme: ''
  xcode_actions: ''
  xcode_useXcpretty: false
  xcode_destination: ''
  xcode_extraArgs: ''

steps:
  # Install any pods necessary for the project
  - bash: |
      echo "Running: cd apps/apple/FluentUITester/$platform_directory && pod install from $PWD" &&
      cd apps/apple/FluentUITester/$platform_directory &&
      pod install
    env:
      platform_directory: ${{ parameters.relative_directory }}
    displayName: "Install Pod Project Dependencies"

  # Different packagers for iOS and macOS
  - ${{ if eq(${{ parameters.relative_directory }}, 'ios') }}:
    - task: CmdLine@2
      displayName: 'Start Packager- iOS'
      inputs:
        script: .ado/ado-packager-setup_ios.sh

  - ${{ if eq(${{ parameters.relative_directory }}, 'macos') }}:
    - task: CmdLine@2
      displayName: 'Start Packager- macOS'
      inputs:
        script: .ado/ado-packager-setup-macos.sh

  - task: Xcode@5
    displayName: 'Xcode ${{ parameters.xcode_actions }} ${{ parameters.xcode_configuration }} ${{ parameters.xcode_sdk }} ${{ parameters.xcode_scheme }}'
    inputs:
      actions: '${{ parameters.xcode_actions }}'
      configuration: ${{ parameters.xcode_configuration }}
      sdk: ${{ parameters.xcode_sdk }}
      xcWorkspacePath: ${{ parameters.xcode_workspacePath }}
      scheme: ${{ parameters.xcode_scheme }}
      xcodeVersion: default
      signingOption: auto
      packageApp: false
      teamId: '$(XCodeSigningMicrosoftTeamID)'
      args: '-destination "${{ parameters.xcode_destination }}" ONLY_ACTIVE_ARCH=NO -verbose -UseModernBuildSystem=NO -derivedDataPath DerivedData ${{ parameters.xcode_extraArgs }}'
      exportPath: '$(agent.builddirectory)/output/${{ parameters.xcode_sdk }}/${{ parameters.xcode_configuration }}'
      useXcpretty: ${{ parameters.xcode_useXcpretty }}
      publishJUnitResults: ${{ parameters.xcode_useXcpretty }}
      xctoolReporter: 'junit:test-results.xml'
